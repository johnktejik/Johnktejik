<?php
error_reporting(E_ALL);
echo "<h1>Yahoo Sitebuilder to Adobe Dreamweaver converter.</h1>";

$totalcount = 0;
$cssstring = "";  //it has to be a global because the preg_callback function uses it, and we need data to travel over between iterations of the callback function, AND be able to reset the string outside the function (at end of files)

if($_POST['start']){

}else{
	echo "<hr>Please back up your files before excecuting.<br><br><h2>Process all files and directories in ".__DIR__."?<br></h2>";
	?>

	<form action="<?php echo $PHP_SELF ?>" method="post">
	<input type="submit" value="Start converting" title="start" name="start"  />
	</form>

	<?php

	die();
}

function processdirectory($directory)
{
    chdir("$directory"); //to make sure you are always in right directory
	echo "Entering: ".getcwd()."<br>";
	if ($handle = opendir(".")) {

	    while (false !== ($file = readdir($handle))) {

			if (($file != "." && $file != "..") && !is_dir($file)) {
				echo "processing $file . . ";
				processfile($file);			}
			if(is_dir($file) && ($file != "." && $file != "..")){
				processdirectory($file);
			}
		}
		closedir($handle);
	 }
	 echo "Leaving Directory.<br>";
	 chdir("..");  //go back down where we came from
}

function processfile($file){

	global $cssstring;
	$cssstring = "
";

	$ext = pathinfo($file, PATHINFO_EXTENSION);
	if($ext != "htm" && $ext != "html"){
		echo "<font size='-1'> not html. </font><br>";
		 return;  //only process html files
	}

	if(false !== ($content = file_get_contents($file))){  //if file is readable

		$pattern = "/div id=\"e\d+\" style=\"position:absolute;left:\d+;top:\d+;width:\d+;height:\d+;\"/";  //find siteweaver divs

//		if(preg_match_all($pattern, $content, $matches, PREG_OFFSET_CAPTURE | PREG_SET_ORDER)){  //if finds matches, put them in $matches
		$newcontent = preg_replace_callback(  //find all sitebuilder-style divs, and call a function for each one
			$pattern,
			function ($matches){

				preg_match_all("/\d+/",$matches[0],$numbers);				//get all the number in the string

				$divnum = $numbers[0][0];  //they correspond to the first div
				$left = $numbers[0][1];    //next number is the left: attribute
				$top = $numbers[0][2];     // etc etc
				$width = $numbers[0][3];
				$height = $numbers[0][4];

				global $cssstring;
				$cssstring .= "	#e".$divnum." {position:absolute; left:".$left."px;	top:".$top."px;	width:".$width."px;	height:".$height."px;	z-index:1;	}
";


				//echo "<pre>";
				//print_r($matches);
				//print_r($numbers);
				//echo "</pre>";

				return "div id=\"e".$divnum."\"";  //cut out the inline style part
			},
			$content, -1, $count);

		echo $count." matches found: <br>";

		//echo "replacing <-- tags.... <br>";


		if($count > 0){
			global $totalcount;
			global $cssstring;
			$totalcount += $count;
			$insertpos = strpos($newcontent,"</style>");
			$newcontent = substr_replace($newcontent,$cssstring,$insertpos,0);  //insert the new $css string right before the </style>

			$newcontent = preg_replace("/<!--\\$(.*?)\\$-->/","",$newcontent);  //sitebuilder adds comments with <!--$    use this fact to remove them - dollar signs must be double escaped
			$newcontent = preg_replace("/<meta name=\"generator\"(.*?)>/","",$newcontent);  //eliminate meta 'generated by'
			//echo "<pre>";
			//echo htmlspecialchars($newcontent,ENT_QUOTES);//see what it looks like
			//echo "</pre>";

			echo "writing ".file_put_contents($file,$newcontent). " bytes to $file <br>";
		}
	}

}

// code starts here //////////////////////////////////////////////////////////////////////////////

processdirectory(__DIR__);
echo "<h3> Finished </h3>  $totalcount lines replaced. <br>";
?>